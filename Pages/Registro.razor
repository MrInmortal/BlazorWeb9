@page "/registro"
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@using System.Text.Json

<div class="form-wrapper">
    <div class="form-box">
        <h2>Crear Cuenta</h2>
        <EditForm Model="@registerModel" OnValidSubmit="@HandleRegister">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="input-group">
                <label for="username">Nombre de Usuario</label>
                <input id="username" @bind="registerModel.Username" />
            </div>
            <div class="input-group">
                <label for="email">Correo Electrónico</label>
                <input id="email" type="email" @bind="registerModel.Email" />
            </div>
            <div class="input-group">
                <label for="password">Contraseña</label>
                <input id="password" type="password" @bind="registerModel.Password" />
            </div>
            <div class="input-group">
                <label for="confirmPassword">Confirmar Contraseña</label>
                <input id="confirmPassword" type="password" @bind="registerModel.ConfirmPassword" />
            </div>
            <button type="submit" class="btn-primary">Registrarse</button>
        </EditForm>
    </div>
</div>

@code {
    private RegisterModel registerModel = new();

    private async Task HandleRegister()
    {
        if (registerModel.Password != registerModel.ConfirmPassword)
        {
            Console.WriteLine("Las contraseñas no coinciden");
            return;
        }

        var usersJson = await LocalStorage.GetItemAsync<string>("users");
        var users = string.IsNullOrEmpty(usersJson) ? new List<User>() : JsonSerializer.Deserialize<List<User>>(usersJson);

        users.Add(new User
            {
                Username = registerModel.Username,
                Email = registerModel.Email,
                Password = registerModel.Password
            });

        await LocalStorage.SetItemAsync("users", JsonSerializer.Serialize(users));
        Console.WriteLine("Registro exitoso: " + registerModel.Username);
    }

    public class RegisterModel
    {
        public string Username { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
        public string ConfirmPassword { get; set; } = string.Empty;
    }

    public class User
    {
        public string Username { get; set; }
        public string Email { get; set; }
        public string Password { get; set; }
    }
}

<style>
    .form-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }

    .form-box {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);
        width: 300px;
        text-align: center;
    }

        .form-box h2 {
            font-size: 24px;
            margin-bottom: 20px;
        }

    .input-group {
        margin-bottom: 15px;
        text-align: left;
    }

        .input-group label {
            font-size: 14px;
            color: #333;
        }

        .input-group input {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            font-size: 16px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

    .btn-primary {
        width: 100%;
        padding: 10px;
        font-size: 16px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }
</style>
